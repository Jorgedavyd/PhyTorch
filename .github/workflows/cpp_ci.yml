name: C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            compiler: g++
          - os: windows-latest
            compiler: msvc
          - os: macos-latest
            compiler: clang++

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Run Cppcheck
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y cppcheck
        cppcheck --enable=all --suppress=missingIncludeSystem .

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binary-${{ matrix.os }}
        path: |
          ${{github.workspace}}/build/**/*.exe
          ${{github.workspace}}/build/**/*.out
        if-no-files-found: ignore
